<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="classpath:spring/spring-dao.xml"></import>
    <import resource="classpath:spring/spring-redis.xml"></import>
    <context:component-scan base-package="com.plasticlove"/>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="login.html"/>
        <property name="unauthorizedUrl" value="403.html"/>
        <property name="filterChainDefinitions">
            <value>
                /login.html = anon
                /subLogin = anon
                /testRole = roleOr["admin","admin1"]
                <!--  /testRole = roles["admin"]
                  /testRole1 = roles["admin","admin1"]
                  /testPerms = perms["user:delete"]
                  /testPerms1 = perms["user:delete","user:add"]-->

                <!--/testRole = roles["admin","admin1"]-->
                <!--/testRole1 = rolesOr["admin","admin1"]-->
                /* = authc
            </value>
        </property>

        <property name="filters">
            <util:map>
                <entry key="roleOr" value-ref="rolesOrFilter"></entry>
            </util:map>
        </property>
        <!--<property name="filters">-->
            <!--<util:map>-->
                <!--<entry key="rolesOr" value-ref="rolesOrFilter"/>-->
            <!--</util:map>-->
        <!--</property>-->
    </bean>

    <bean id = "rolesOrFilter" class="com.plasticlove.filter.RoleOrFilter"></bean>

    <!--<bean id="rolesOrFilter" class="com.plasticlove.filter.RolesOrFilter"/>-->

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 创建 SecurityManager 对象 -->
        <property name="realm" ref="realm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="cookieRememberMeManager"/>
    </bean>

    <bean id="realm" class="com.plasticlove.shiro.realm.CustomeRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
    </bean>

    <bean class="com.plasticlove.session.CustomeSessionManager" id="sessionManager">
        <property name="sessionDAO" ref="redisSessionDao"></property>
    </bean>


    <bean id ="redisSessionDao" class="com.plasticlove.session.RedisSessionDao">

    </bean>


    <bean class="com.plasticlove.cache.RedisCacheManager" id="cacheManager"></bean>


    <bean class="org.apache.shiro.web.mgt.CookieRememberMeManager" id="cookieRememberMeManager">
        <property name="cookie" ref="simpleCookie"></property>
    </bean>

    <bean class="org.apache.shiro.web.servlet.SimpleCookie" id ="simpleCookie">
        <constructor-arg value="rememberMe"></constructor-arg>
        <property name="maxAge" value="200000"></property>
    </bean>




</beans>